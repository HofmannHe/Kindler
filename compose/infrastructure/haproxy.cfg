global
  daemon
  maxconn 2048

defaults
  mode http
  timeout connect 5s
  timeout client  30s
  timeout server  30s

frontend fe_http
  bind *:80
  mode http
  acl host_git  hdr_reg(host) -i ^git\.devops\.[^:]+
  use_backend be_git if host_git
  acl host_portainer  hdr_reg(host) -i ^portainer\.devops\.[^:]+
  http-request redirect scheme https code 301 if host_portainer
  acl host_haproxy_stats  hdr_reg(host) -i ^haproxy\.devops\.[^:]+
  acl path_haproxy_stats path_beg /stat
  use_backend be_haproxy_stats if host_haproxy_stats path_haproxy_stats
  acl host_argocd hdr_reg(host) -i ^argocd\.devops\.[^:]+
  use_backend be_argocd if host_argocd
  # BEGIN DYNAMIC ACL (managed by scripts/haproxy_route.sh)
  acl host_prod  hdr_reg(host) -i ^[^.]+\.prod\.[^:]+
  use_backend be_prod if host_prod
  acl host_uat  hdr_reg(host) -i ^[^.]+\.uat\.[^:]+
  use_backend be_uat if host_uat
  acl host_dev  hdr_reg(host) -i ^[^.]+\.dev\.[^:]+
  use_backend be_dev if host_dev
  acl host_devops  hdr_reg(host) -i ^[^.]+\.devops\.[^:]+
  use_backend be_devops if host_devops
  acl host_prod-k3d  hdr_reg(host) -i ^[^.]+\.prodk3d\.[^:]+
  use_backend be_prod-k3d if host_prod-k3d
  acl host_uat-k3d  hdr_reg(host) -i ^[^.]+\.uatk3d\.[^:]+
  use_backend be_uat-k3d if host_uat-k3d
  acl host_dev-k3d  hdr_reg(host) -i ^[^.]+\.devk3d\.[^:]+
  use_backend be_dev-k3d if host_dev-k3d
  # END DYNAMIC ACL
  default_backend be_default_404

frontend fe_https
  bind *:443
  mode tcp
  default_backend be_portainer_https

## dynamic backends
# BEGIN DYNAMIC BACKENDS (managed by scripts/haproxy_route.sh)
backend be_prod
  server s1 172.19.0.6:30080
backend be_uat
  server s1 172.19.0.4:30080
backend be_dev
  server s1 172.19.0.5:30080
backend be_devops
  server s1 10.100.0.10:30800
backend be_prod-k3d
  server s1 10.100.0.5:30080
backend be_uat-k3d
  server s1 10.100.0.15:30080
backend be_dev-k3d
  server s1 10.100.0.7:30080
backend be_portainer_https
  mode tcp
  server s1 portainer-ce:9443

backend be_argocd
  server s1 10.100.0.10:30800
backend be_git
  server s1 host.docker.internal:6080
backend be_haproxy_stats
  mode http
  stats enable
  stats uri /stat
  stats refresh 10s

backend be_default_404
  http-request return status 404 content-type text/plain lf-string "not found"

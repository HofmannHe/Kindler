---
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: argocd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-application-controller
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-server
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-application-controller
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-application-controller
  namespace: argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
data:
  url: "http://argocd.devops.local"
  admin.enabled: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
data:
  server.insecure: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-secret
  namespace: argocd
type: Opaque
stringData:
  admin.password: "$2a$10$rRyBsGSHK6.uc8fntPwVIuLVHgsAhAX7TcdrqW/XGSaKKK.VXr3aO"
  admin.passwordMtime: "2025-01-01T00:00:00Z"
  server.secretkey: "Y29uY2VydC1zZWNyZXQta2V5"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-application-controller
    spec:
      serviceAccountName: argocd-application-controller
      containers:
      - name: controller
        image: quay.io/argoproj/argocd:v3.1.7
        imagePullPolicy: IfNotPresent
        command:
        - argocd-application-controller
        env:
        - name: ARGOCD_RECONCILIATION_TIMEOUT
          value: "180s"
        - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
          value: argocd-repo-server:8081
        ports:
        - containerPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-repo-server
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: repo-server
        image: quay.io/argoproj/argocd:v3.1.7
        imagePullPolicy: IfNotPresent
        command:
        - argocd-repo-server
        ports:
        - containerPort: 8081
        - containerPort: 8084
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: server
        image: quay.io/argoproj/argocd:v3.1.7
        imagePullPolicy: IfNotPresent
        command:
        - argocd-server
        - --insecure
        - --staticassets
        - /shared/app
        env:
        - name: ARGOCD_SERVER_REPO_SERVER
          value: argocd-repo-server:8081
        ports:
        - containerPort: 8080
        - containerPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-application-controller
  ports:
  - port: 8082
    targetPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-repo-server
  ports:
  - name: server
    port: 8081
    targetPort: 8081
  - name: metrics
    port: 8084
    targetPort: 8084
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: argocd-server
  ports:
  - name: http
    port: 80
    targetPort: 8080
    nodePort: 30800
